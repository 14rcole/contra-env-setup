---
# create/update and add security for containers

- name: "Set the container_config_name to OpenShift s2i templates"
  set_fact:
    container_config_name: "OpenShift s2i templates"

# Use the repo's OpenShift s2i templates as the list to process
- name: "Get OpenShift s2i template names from {{ os_template_dir }}"
  find:
    paths: "{{ project_dir }}/{{ os_template_dir }}"
    patterns: '*.yml,*.yaml'
    recurse: yes
  register: os_templates

- name: "Get helper OpenShift s2i template names from {{ helper_os_template_dir }}/helper"
  find:
    paths: "{{ helper_project_dir }}/{{ helper_os_template_dir }}/helper"
    patterns: '*.yml,*.yaml'
    recurse: yes
  register: helper_os_templates
  when: project_repo != sample_project_repo

- name: "os_templates when project_repo == sample_project_repo"
  set_fact:
    all_templates: "{{ os_templates.files }}"

- name: "os_templates + helper_os_templates when project_repo != to sample_project_repo"
  set_fact:
    all_templates: "{{ os_templates.files }} + {{ helper_os_templates.files }}"
  when: project_repo != sample_project_repo

- debug:
    msg: "{{ item.path }}"
  with_items: "{{ all_templates }}"

- name: "Process the templates"
  template:
    src: "{{ item.path }}"
    dest: "{{ item.path }}.processed"
  with_items: "{{ all_templates }}"

# Check that templates are valid
- name: "Check that templates are valid"
  shell: "{{ oc_bin }} process -f {{ item.path }}.processed"
  with_items: "{{ all_templates }}"

# Load project_repo templates into OpenShift
- include_tasks: "setup_os_templates.yml template_name={{ item.path }}.processed"
  with_items: "{{ all_templates }}"
  when: all_templates != ""

## Only run of project_repo != sample_project_repo and setup_sample_project == true
- include_tasks: "setup_sample_proj.yml"
  when: (project_repo != sample_project_repo and setup_sample_project|bool == true)



