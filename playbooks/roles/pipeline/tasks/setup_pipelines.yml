---
# create/update Jenkins pipelines

- name: "Cycle through {{ pipeline_dir }}"
  find:
    paths: "{{ project_dir }}/{{ pipeline_dir }}"
    recurse: yes
  register: pipelines

- name: "Cycle through {{ sample_pipeline_dir }}"
  find:
    paths: "{{ sample_project_dir }}/{{ sample_pipeline_dir }}"
    recurse: yes
  register: sample_pipelines
  when:
    - project_repo != sample_project_repo
    - setup_sample_project|bool == true

- name: "Setting facts"
  set_fact:
    all_pipelines: "{{ pipelines.files }}"

- name: "Setting facts with conditional"
  set_fact:
    all_pipelines: "{{ pipelines.files }} + {{ sample_pipelines.files }}"
  when:
    - project_repo != sample_project_repo
    - setup_sample_project|bool == true

- debug:
    msg: "{{ item.path }}"
  with_items: "{{ all_pipelines }}"

- name: "Check if pipeline buildconfigs are present already"
  shell: "{{ oc_bin }} get buildconfig | grep 'JenkinsPipeline' | awk '{print $1}' | egrep '^{{ item.path.split('/')[-2] }}$'"
  register: "pipeline_name_check"
  with_items: "{{ all_pipelines }}"
  when: pipelines is defined
  ignore_errors: yes

- name: "Replace pipeline buildconfigs"
  command: "{{ oc_bin }} replace -f {{ item.item.path }}"
  with_items:  "{{ pipeline_name_check.results }}"
  when: "{{ item.rc == 0 }}"

- name: "Create pipeline buildconfigs"
  command: "{{ oc_bin }} create -f {{ item.item.path }}"
  with_items:  "{{ pipeline_name_check.results }}"
  when: "{{ item.rc != 0 }}"
